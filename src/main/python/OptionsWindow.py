# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'optionswindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_OptionsWindow(object):
    def setupUi(self, OptionsWindow):
        OptionsWindow.setObjectName("OptionsWindow")
        OptionsWindow.resize(582, 359)
        OptionsWindow.setStyleSheet(".QMainWindow {\n"
"    padding:: 0;\n"
"    margin: 0;\n"
"}\n"
"\n"
"#tbOptions {\n"
"    border: none;\n"
"}")
        self.CentralWidget = QtWidgets.QWidget(OptionsWindow)
        self.CentralWidget.setStyleSheet("#CentralWidget {\n"
"    padding: 0;\n"
"    margin: 0;\n"
"    border: none;\n"
"}")
        self.CentralWidget.setObjectName("CentralWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.CentralWidget)
        self.gridLayout.setObjectName("gridLayout")
        self.stckOptionsPages = QtWidgets.QStackedWidget(self.CentralWidget)
        self.stckOptionsPages.setObjectName("stckOptionsPages")
        self.pgOptionsLibrary = QtWidgets.QWidget()
        self.pgOptionsLibrary.setObjectName("pgOptionsLibrary")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.pgOptionsLibrary)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.widget = QtWidgets.QWidget(self.pgOptionsLibrary)
        self.widget.setObjectName("widget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setSpacing(20)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.bReloadLibrary = QtWidgets.QPushButton(self.widget)
        self.bReloadLibrary.setMaximumSize(QtCore.QSize(100, 16777215))
        self.bReloadLibrary.setObjectName("bReloadLibrary")
        self.gridLayout_3.addWidget(self.bReloadLibrary, 1, 1, 1, 1)
        self.lReloadLibrary = QtWidgets.QLabel(self.widget)
        self.lReloadLibrary.setMinimumSize(QtCore.QSize(200, 0))
        self.lReloadLibrary.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lReloadLibrary.setObjectName("lReloadLibrary")
        self.gridLayout_3.addWidget(self.lReloadLibrary, 1, 0, 1, 1)
        self.iLibraryXML = QtWidgets.QLineEdit(self.widget)
        self.iLibraryXML.setObjectName("iLibraryXML")
        self.gridLayout_3.addWidget(self.iLibraryXML, 0, 1, 1, 1)
        self.bLibraryXML = QtWidgets.QPushButton(self.widget)
        self.bLibraryXML.setObjectName("bLibraryXML")
        self.gridLayout_3.addWidget(self.bLibraryXML, 0, 2, 1, 1)
        self.lLibraryXML = QtWidgets.QLabel(self.widget)
        self.lLibraryXML.setMinimumSize(QtCore.QSize(200, 0))
        self.lLibraryXML.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lLibraryXML.setObjectName("lLibraryXML")
        self.gridLayout_3.addWidget(self.lLibraryXML, 0, 0, 1, 1)
        self.txtLibraryInfo = QtWidgets.QPlainTextEdit(self.widget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setItalic(False)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.txtLibraryInfo.setFont(font)
        self.txtLibraryInfo.setAutoFillBackground(False)
        self.txtLibraryInfo.setStyleSheet("#txtLibraryInfo {\n"
"    background-color: transparent;\n"
"}")
        self.txtLibraryInfo.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.txtLibraryInfo.setFrameShadow(QtWidgets.QFrame.Plain)
        self.txtLibraryInfo.setReadOnly(True)
        self.txtLibraryInfo.setObjectName("txtLibraryInfo")
        self.gridLayout_3.addWidget(self.txtLibraryInfo, 2, 1, 1, 2)
        self.gridLayout_2.addWidget(self.widget, 0, 0, 1, 1)
        self.stckOptionsPages.addWidget(self.pgOptionsLibrary)
        self.pgOptionsCopying = QtWidgets.QWidget()
        self.pgOptionsCopying.setObjectName("pgOptionsCopying")
        self.widget_2 = QtWidgets.QWidget(self.pgOptionsCopying)
        self.widget_2.setGeometry(QtCore.QRect(10, 10, 444, 72))
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setSpacing(20)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.lAlbumCopy = QtWidgets.QLabel(self.widget_2)
        self.lAlbumCopy.setMinimumSize(QtCore.QSize(200, 0))
        self.lAlbumCopy.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lAlbumCopy.setObjectName("lAlbumCopy")
        self.gridLayout_4.addWidget(self.lAlbumCopy, 0, 0, 1, 1)
        self.cbAlbumCopy = QtWidgets.QComboBox(self.widget_2)
        self.cbAlbumCopy.setObjectName("cbAlbumCopy")
        self.cbAlbumCopy.addItem("")
        self.cbAlbumCopy.addItem("")
        self.cbAlbumCopy.addItem("")
        self.gridLayout_4.addWidget(self.cbAlbumCopy, 0, 1, 1, 1)
        self.lArtistCopy = QtWidgets.QLabel(self.widget_2)
        self.lArtistCopy.setMinimumSize(QtCore.QSize(200, 0))
        self.lArtistCopy.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lArtistCopy.setObjectName("lArtistCopy")
        self.gridLayout_4.addWidget(self.lArtistCopy, 1, 0, 1, 1)
        self.cbArtistCopy = QtWidgets.QComboBox(self.widget_2)
        self.cbArtistCopy.setObjectName("cbArtistCopy")
        self.cbArtistCopy.addItem("")
        self.cbArtistCopy.addItem("")
        self.cbArtistCopy.addItem("")
        self.gridLayout_4.addWidget(self.cbArtistCopy, 1, 1, 1, 1)
        self.stckOptionsPages.addWidget(self.pgOptionsCopying)
        self.gridLayout.addWidget(self.stckOptionsPages, 0, 0, 1, 1)
        OptionsWindow.setCentralWidget(self.CentralWidget)
        self.tbOptions = QtWidgets.QToolBar(OptionsWindow)
        self.tbOptions.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tbOptions.setMovable(False)
        self.tbOptions.setIconSize(QtCore.QSize(48, 48))
        self.tbOptions.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.tbOptions.setFloatable(False)
        self.tbOptions.setObjectName("tbOptions")
        OptionsWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.tbOptions)

        self.retranslateUi(OptionsWindow)
        self.stckOptionsPages.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(OptionsWindow)

    def retranslateUi(self, OptionsWindow):
        _translate = QtCore.QCoreApplication.translate
        OptionsWindow.setWindowTitle(_translate("OptionsWindow", "MainWindow"))
        self.bReloadLibrary.setText(_translate("OptionsWindow", "Reload"))
        self.lReloadLibrary.setText(_translate("OptionsWindow", "Reload library:"))
        self.iLibraryXML.setToolTip(_translate("OptionsWindow", "Please orivide a path to the XML file of your Music Library."))
        self.bLibraryXML.setText(_translate("OptionsWindow", "select"))
        self.lLibraryXML.setText(_translate("OptionsWindow", "Path to Library (XML):"))
        self.txtLibraryInfo.setToolTip(_translate("OptionsWindow", "Information about your Library file"))
        self.txtLibraryInfo.setPlainText(_translate("OptionsWindow", "Playlists: 999\n"
"Songs: 999\n"
"Artists: 999\n"
"Albums: 999\n"
"Last updated: 12.1.2021"))
        self.lAlbumCopy.setText(_translate("OptionsWindow", "When copying albums:"))
        self.cbAlbumCopy.setItemText(0, _translate("OptionsWindow", "Just copy the files"))
        self.cbAlbumCopy.setItemText(1, _translate("OptionsWindow", "Create a playlist with all albums"))
        self.cbAlbumCopy.setItemText(2, _translate("OptionsWindow", "Create a playlist for each album"))
        self.lArtistCopy.setText(_translate("OptionsWindow", "When copying artists:"))
        self.cbArtistCopy.setItemText(0, _translate("OptionsWindow", "Just copy the files"))
        self.cbArtistCopy.setItemText(1, _translate("OptionsWindow", "Create a playlist with all artists"))
        self.cbArtistCopy.setItemText(2, _translate("OptionsWindow", "Create a playlist for each artist"))
        self.tbOptions.setWindowTitle(_translate("OptionsWindow", "toolBar"))
